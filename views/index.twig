{% extends 'layout.twig' %} {% block body %}
<div>
  <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <a class="navbar-brand" href="#">Socks Shop</a>
    <button
      class="navbar-toggler"
      type="button"
      data-toggle="collapse"
      data-target="#navbarSupportedContent"
    >
      <span class="navbar-toggler-icon"></span>
    </button>

    <div class="collapse navbar-collapse" id="navbarSupportedContent">
      <ul class="navbar-nav ml-auto">
        <li class="nav-item dropdown" id="user">
          <button
            class="btn btn-link nav-link dropdown-toggle"
            type="button"
            data-toggle="dropdown"
          >
            <svg
              id="user-i-signin"
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 32 32"
              width="32"
              height="32"
              fill="none"
              stroke="currentcolor"
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
            >
              <path
                d="M3 16 L23 16 M15 8 L23 16 15 24 M21 4 L29 4 29 28 21 28"
              />
            </svg>

            <svg
              id="user-i-user"
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 32 32"
              width="32"
              height="32"
              fill="none"
              stroke="currentcolor"
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth="2"
            >
              <path
                d="M22 11 C22 16 19 20 16 20 13 20 10 16 10 11 10 6 12 3 16 3 20 3 22 6 22 11 Z M4 30 L28 30 C28 21 22 20 16 20 10 20 4 21 4 30 Z"
              />
            </svg>
          </button>

          <div class="dropdown-menu dropdown-menu-right">
            <span
              id="user-login"
              class="dropdown-item"
              data-toggle="modal"
              data-target="#user-login-modal"
              >Login</span
            >
            <span
              id="user-register"
              class="dropdown-item"
              data-toggle="modal"
              data-target="#user-register-modal"
              >Register</span
            >
            <span id="user-howdy" class="dropdown-item-text"></span>
            <div id="user-logout-divider" class="dropdown-divider"></div>
            <span
              id="user-logout"
              class="dropdown-item"
              onclick="return user_logout(event)"
              >Logout</span
            >
          </div>

          <div
            class="modal fade"
            id="user-login-modal"
            tabindex="-1"
            role="dialog"
          >
            <div class="modal-dialog" role="document">
              <div class="modal-content">
                <div class="modal-body">
                  <form
                    id="user-login-form"
                    onsubmit="return user_login(event)"
                  >
                    <div id="user-login-failure-message" class="d-none">
                      <div class="alert alert-danger">
                        Invalid login credentials.
                      </div>
                    </div>

                    <div class="form-group">
                      <label>Username</label>
                      <input
                        type="text"
                        class="form-control"
                        name="username"
                        value="user"
                        id="user-login-modal-username"
                      />
                    </div>
                    <div class="form-group">
                      <label>Password</label>
                      <input
                        type="password"
                        class="form-control"
                        name="password"
                        value="password"
                        id="user-login-modal-password"
                      />
                    </div>
                  </form>
                </div>
                <div class="modal-footer">
                  <button
                    type="button"
                    class="btn btn-secondary"
                    data-dismiss="modal"
                    id="user-login-modal-close"
                  >
                    Close
                  </button>
                  <button
                    type="submit"
                    form="user-login-form"
                    class="btn btn-primary"
                  >
                    Login
                  </button>
                </div>
              </div>
            </div>
          </div>

          <div
            class="modal fade"
            id="user-register-modal"
            tabindex="-1"
            role="dialog"
          >
            <div class="modal-dialog" role="document">
              <div class="modal-content">
                <div class="modal-body">
                  <form
                    id="user-register-form"
                    onsubmit="return user_register(event)"
                  >
                    <div id="user-register-failure-message" class="d-none">
                      <div class="alert alert-danger">
                        Registration failed, try again.
                      </div>
                    </div>

                    <div class="form-group">
                      <label>Username</label>
                      <input
                        type="text"
                        class="form-control"
                        name="username"
                        id="user-register-modal-username"
                      />
                    </div>

                    <div class="form-group">
                      <label>Password</label>
                      <input
                        type="password"
                        class="form-control"
                        name="password"
                        id="user-register-modal-password"
                      />
                    </div>
                  </form>
                </div>
                <div class="modal-footer">
                  <button
                    type="button"
                    class="btn btn-secondary"
                    data-dismiss="modal"
                    id="user-register-modal-close"
                  >
                    Close
                  </button>
                  <button
                    type="submit"
                    form="user-register-form"
                    class="btn btn-primary"
                  >
                    Register
                  </button>
                </div>
              </div>
            </div>
          </div>
        </li>
        <li class="nav-item dropdown" id="carts">
          <button
            class="btn btn-link nav-link dropdown-toggle"
            type="button"
            data-toggle="dropdown"
          >
            <svg
              id="user-i-cart"
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 32 32"
              width="32"
              height="32"
              fill="none"
              stroke="currentcolor"
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth="2"
            >
              <path d="M6 6 L30 6 27 19 9 19 M27 23 L10 23 5 2 2 2" />
              <circle cx="25" cy="27" r="2" />
              <circle cx="12" cy="27" r="2" />
            </svg>

            <span class="badge badge-light" id="carts-items-count">0</span>
          </button>
          <div class="dropdown-menu dropdown-menu-right" style="width: 400px;">
            <ul class="list-group" id="carts-items">
              <li class="list-group-item" id="carts-empty-cart">
                Empty cart...
              </li>
            </ul>
          </div>
        </li>
      </ul>
    </div>
  </nav>

  <div class="container pt-2" id="catalogue">
    <div class="row" id="catalogue-products"></div>
  </div>
</div>
{% endblock %} {% block scripts %} {# User scripts below #}
<script>
  function user_getUsername(id, callback) {
    $.ajax({
      url: `{{ apiBaseUrl }}/customers/${id}`,
      type: 'GET',
      success: (data) => {
        const json = JSON.parse(data);
        if (json.status_code !== 500) {
          callback(json.username);
        } else {
          console.error(
            `Could not get user information: ${id}, due to:  ${json.status_text} | ${json.error}`
          );
          return callback(undefined);
        }
      },
      error: function (jqXHR, textStatus, errorThrown) {
        console.error(
          `Could not get user information: ${id}, due to: ${textStatus} | ${errorThrown}`
        );
      },
    });
  }

  function user_prepareNavbarForUnauthenticatedUser() {
    $('#user-i-signin').show();
    $('#user-login').show();
    $('#user-register').show();

    $('#user-i-user').hide();
    $('#user-howdy').hide();
    $('#user-logout-divider').hide();
    $('#user-logout').hide();
  }

  function user_prepareNavbarForAuthenticatedUser(username) {
    $('#user-i-signin').hide();
    $('#user-login').hide();
    $('#user-register').hide();

    $('#user-i-user').show();
    $('#user-howdy').text(`Logged in as: ${username}`).show();
    $('#user-logout-divider').show();
    $('#user-logout').show();
  }

  function user_initializeNavbar() {
    const userId = Cookies.get('logged_in');

    if (userId) {
      user_getUsername(userId, function (username) {
        if (typeof username !== 'undefined') {
          $('#carts').trigger('carts:initialize-cart');
          user_prepareNavbarForAuthenticatedUser(username);
        } else {
          user_prepareNavbarForUnauthenticatedUser();
        }
      });
    } else {
      user_prepareNavbarForUnauthenticatedUser();
    }
  }

  function user_login(event) {
    event.preventDefault();

    const username = $('#user-login-modal-username').val();
    const password = $('#user-login-modal-password').val();

    $.ajax({
      url: '{{ apiBaseUrl }}/login',
      type: 'GET',
      async: false,
      success: () => {
        user_initializeNavbar();
        $('#user-login-modal-close').click();
        $('#carts').trigger('carts:initialize-cart');
      },
      error: () => {
        $('#user-login-failure-message').removeClass('d-none');
      },
      beforeSend: (xhr) => {
        xhr.setRequestHeader(
          'Authorization',
          `Basic ${btoa(username + ':' + password)}`
        );
      },
    });
    return false;
  }

  function user_logout() {
    Cookies.remove('logged_in');
    user_initializeNavbar();
    $('#carts').trigger('carts:reset-cart');
  }

  function user_register(event) {
    event.preventDefault();

    $.ajax({
      url: '{{ apiBaseUrl }}/register',
      type: 'POST',
      async: false,
      data: JSON.stringify({
        username: $('#user-register-modal-username').val(),
        password: $('#user-register-modal-password').val(),
      }),
      success: () => {
        user_initializeNavbar();
        $('#user-register-modal-close').click();
      },
      error: () => {
        $('#user-register-failure-message').removeClass('d-none');
      },
    });
    return false;
  }

  user_initializeNavbar();
</script>

{# Carts scripts below #}
<script>
  $(document).ready(() => {
    $('#carts').on('carts:initialize-cart', () => {
      carts_initializeCart();
    });

    $('#carts').on('carts:add-product-to-cart', (event, product) => {
      carts_addToCart(product);
    });

    $('#carts').on('carts:reset-cart', () => {
      carts_resetCart();
    });
  });

  function carts_initializeCart() {
    $.getJSON('{{ apiBaseUrl }}/cart', {}, (items) => {
      if (items != null) {
        let numItemsInCart = 0;
        $.each(items, (index, itm) => {
          if (itm != null && itm.itemId != null) {
            $.getJSON(`{{ apiBaseUrl }}/catalogue/${itm.itemId}`, (product) => {
              numItemsInCart += itm.quantity;
              carts_addItemToCartUi(product);
            }).always(() => {
              $('#carts-items-count').text(numItemsInCart);

              if (numItemsInCart > 0) {
                $('#carts-empty-cart').hide();
              }
            });
          }
        });
      }
    });
  }

  function carts_addItemToCartUi(product) {
    $('#carts-items').append(`
      <li class="list-group-item c-item">
        <div class="media">
          <img class="mr-3" src="{{ apiBaseUrl }}${product.imageUrl[0]}" width="60" />
          <div class="media-body">
            <h5 class="mt-0">${product.name} - &dollar;${product.price}</h5>
          </div>
        </div>
      </li>
    `);
  }

  function carts_updateCountUi() {
    const countElement = $('#carts-items-count');
    let currentCount = parseInt(countElement.text().trim()) || 0;

    if (currentCount === 0) {
      $('#carts-empty-cart').hide();
    }

    countElement.text(++currentCount);
  }

  function carts_addToCart(product) {
    $.ajax({
      url: '{{ apiBaseUrl }}/cart',
      type: 'POST',
      data: JSON.stringify({ id: product.id }),
      success: function () {
        carts_updateCountUi();
        carts_addItemToCartUi(product);
      },
    });
  }

  function carts_resetCart() {
    $('#carts-items .c-item').hide();
    $('#carts-items-count').text('0');
    $('#carts-empty-cart').show();
  }
</script>

{# Catalogue scripts below #}
<script>
  $(document).ready(() => {
    $.getJSON('{{ apiBaseUrl }}/catalogue', function (data) {
      if (data != null) {
        $.each(data, function (index, product) {
          catalogue_showProductUi(product);
        });
      }
    });
  });

  function catalogue_showProductUi(product) {
    $('#catalogue-products').append(
      `<div class="col-lg-4 col-md-6 mb-4">
        <div class="card h-100">
          <img class="card-img-top" src="{{ apiBaseUrl }}${product.imageUrl[0]}" />
          <div class="card-body">
            <h4 class="card-title">${product.name}</h4>
            <h5>&dollar;${product.price}</h5>
            <p class="card-text">${product.description}</p>
          </div>
          <div class="card-footer text-right">
            <button type="button" class="btn btn-primary"
              onclick="return catalogue_addToCart(
                '${product.id}',
                '${product.name}',
                '${product.price}',
                '${product.imageUrl}'
                )"
                >
                  Add to cart
            </button>
          </div>
        </div>
      </div>
      `
    );
  }

  function catalogue_addToCart(productId, productName, productPrice, imageUrl) {
    $('#carts').trigger('carts:add-product-to-cart', [
      {
        id: productId,
        name: productName,
        price: productPrice,
        imageUrl: imageUrl.split(',')
      },
    ]);
  }
</script>
{% endblock %}
